"use strict";(self.webpackChunkreact_native_beyond_basics=self.webpackChunkreact_native_beyond_basics||[]).push([[9073],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return r}})},4996:function(e,t,n){n.d(t,{C:function(){return o},Z:function(){return i}});var a=n(2263),r=n(3919);function o(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var o=void 0===a?{}:a,i=o.forcePrependBaseUrl,s=void 0!==i&&i,c=o.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(s)return t+n;var p=n.startsWith(t)?n:t+n.replace(/^\//,"");return l?e+p:p}(o,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},9108:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=n(4996),s={sidebar_position:2},c="Network Images",l={unversionedId:"images-and-icons/network-images",id:"images-and-icons/network-images",isDocsHomePage:!1,title:"Network Images",description:"By network images, we mean images that are loaded from a url. Usually, most of the images you'll be using in your app are loaded in this way rather than packaged within the app.",source:"@site/docs/images-and-icons/network-images.mdx",sourceDirName:"images-and-icons",slug:"/images-and-icons/network-images",permalink:"/react-native-beyond-basics/docs/images-and-icons/network-images",editUrl:"https://github.com/kadikraman/react-native-beyond-basics/edit/main/website/docs/images-and-icons/network-images.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Local Images",permalink:"/react-native-beyond-basics/docs/images-and-icons/local-images"},next:{title:"Vector Icons",permalink:"/react-native-beyond-basics/docs/images-and-icons/vector-icons"}},p=[{value:"Note on production usage",id:"note-on-production-usage",children:[]},{value:"Checkpoint \ud83d\udd17",id:"checkpoint-",children:[]}],m={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"network-images"},"Network Images"),(0,o.kt)("p",null,"By network images, we mean images that are loaded from a url. Usually, most of the images you'll be using in your app are loaded in this way rather than packaged within the app."),(0,o.kt)("p",null,"In order to render images from a url, let's display this peaceful smokey background for our home page:"),(0,o.kt)("img",{src:(0,i.Z)("https://images.unsplash.com/photo-1474540412665-1cdae210ae6b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1766&q=80"),width:"500"}),(0,o.kt)("p",null,"Photo from ",(0,o.kt)("a",{parentName:"p",href:"https://unsplash.com/photos/n7a2OJDSZns"},"Unsplash")),(0,o.kt)("p",null,"Open the ",(0,o.kt)("inlineCode",{parentName:"p"},"Home.screen.tsx")," fine again, and add a constant at the top of the file for the image url:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const imageUrl =\n  'https://images.unsplash.com/photo-1474540412665-1cdae210ae6b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1766&q=80';\n")),(0,o.kt)("p",null,"Now let's add an image component"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"<Image source={{ uri: imageUrl }} />\n")),(0,o.kt)("p",null,"And... nothing renders! That's because for network images, we also need to explicitly tell it how large to make the image. In out case, let's make it 200 pt high:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"<Image source={{ uri: imageUrl }} style={{ height: 200 }} />\n")),(0,o.kt)("p",null,"Voila! Finally, let's move the image to the back of the page so that the whole page is wrapped in the image. Unfortunately the ",(0,o.kt)("inlineCode",{parentName:"p"},"Image")," component doesn't allow child components. So in order to do that we must replace it with the ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageBackground")," component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="src/screens/Home.screen.tsx"',title:'"src/screens/Home.screen.tsx"'}," import React from 'react';\n-import { StyleSheet, View } from 'react-native';\n+import { StyleSheet, ImageBackground } from 'react-native';\n import { useAppContext } from '../App.provider';\n import { MoodPicker } from '../components/MoodPicker';\n\n+const imageUrl =\n+  'https://images.unsplash.com/photo-1474540412665-1cdae210ae6b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1766&q=80';\n+\n export const Home: React.FC = () => {\n   const appContext = useAppContext();\n\n   return (\n-    <View style={styles.container}>\n+    <ImageBackground source={{ uri: imageUrl }} style={styles.container}>\n       <MoodPicker onSelect={appContext.handleSelectMood} />\n-    </View>\n+    </ImageBackground>\n   );\n };\n")),(0,o.kt)("p",null,"Finally, let's tweak the the styles of out ",(0,o.kt)("inlineCode",{parentName:"p"},"MoodPicker")," to make the mood picker stand out more on the image:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"add ",(0,o.kt)("inlineCode",{parentName:"li"},"backgroundColor: 'rgba(0,0,0,0.2)'")," to the ",(0,o.kt)("inlineCode",{parentName:"li"},"container")," style, and"),(0,o.kt)("li",{parentName:"ul"},"add ",(0,o.kt)("inlineCode",{parentName:"li"},"color: theme.colorWhite,")," to the ",(0,o.kt)("inlineCode",{parentName:"li"},"heading")," style")),(0,o.kt)("h3",{id:"note-on-production-usage"},"Note on production usage"),(0,o.kt)("p",null,"For production apps, it is recommended to use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/DylanVann/react-native-fast-image"},"react-native-fast-image")," for images that are loaded via url - it's a drop-in replacement for the React Native image component, and it adds a lot of performance optimizations the ",(0,o.kt)("inlineCode",{parentName:"p"},"Image")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageBackground")," component are missing."),(0,o.kt)("h2",{id:"checkpoint-"},"Checkpoint \ud83d\udd17"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/da149e5545e90a99ea33439feddcdf3d56b85224"},(0,o.kt)("strong",{parentName:"a"},"Show a background image with ImageBackground")," da149e5545e90a99ea33439feddcdf3d56b85224")),(0,o.kt)("img",{src:(0,i.Z)("/img/images/ios-bg-image.png"),alt:"iOS bg image",width:"50%"}),(0,o.kt)("img",{src:(0,i.Z)("/img/images/android-bg-image.png"),alt:"Android bg image",width:"50%"}))}u.isMDXComponent=!0}}]);