"use strict";(self.webpackChunkreact_native_beyond_basics=self.webpackChunkreact_native_beyond_basics||[]).push([[2155],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),u=o,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return o}})},4996:function(e,t,n){n.d(t,{C:function(){return r},Z:function(){return i}});var a=n(2263),o=n(3919);function r(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var r=void 0===a?{}:a,i=r.forcePrependBaseUrl,s=void 0!==i&&i,c=r.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,o.b)(n))return n;if(s)return t+n;var p=n.startsWith(t)?n:t+n.replace(/^\//,"");return l?e+p:p}(r,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},7473:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=n(4996),s={sidebar_position:3},c="Vector Icons",l={unversionedId:"images-and-icons/vector-icons",id:"images-and-icons/vector-icons",isDocsHomePage:!1,title:"Vector Icons",description:"The main advantage of using svg - Scalable Vector Graphics - is that they are scalable as the name suggests. This means that the same vector image will look absolutely crisp on any size display. This is extremely appealing when building mobile applications, because we need to consider support for devices with all kinds of pixel density. You will also be able to change the color of the icon dynamically, without needing to create several versions of the icon.",source:"@site/docs/images-and-icons/vector-icons.mdx",sourceDirName:"images-and-icons",slug:"/images-and-icons/vector-icons",permalink:"/react-native-beyond-basics/docs/images-and-icons/vector-icons",editUrl:"https://github.com/kadikraman/react-native-beyond-basics/edit/main/website/docs/images-and-icons/vector-icons.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Network Images",permalink:"/react-native-beyond-basics/docs/images-and-icons/network-images"},next:{title:"Exercise",permalink:"/react-native-beyond-basics/docs/images-and-icons/exercise"}},p=[{value:"Install react-native-svg",id:"install-react-native-svg",children:[]},{value:"Adding an .svg icon",id:"adding-an-svg-icon",children:[]},{value:"Use the icon in the bottom tab",id:"use-the-icon-in-the-bottom-tab",children:[]},{value:"Updating tab title",id:"updating-tab-title",children:[]}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"vector-icons"},"Vector Icons"),(0,r.kt)("p",null,"The main advantage of using ",(0,r.kt)("inlineCode",{parentName:"p"},"svg")," - Scalable Vector Graphics - is that they are scalable as the name suggests. This means that the same vector image will look absolutely crisp on any size display. This is extremely appealing when building mobile applications, because we need to consider support for devices with all kinds of pixel density. You will also be able to change the color of the icon dynamically, without needing to create several versions of the icon."),(0,r.kt)("p",null,"Let's use vector icons for our home, history and analytics tabs."),(0,r.kt)("p",null,"I've chosen the ",(0,r.kt)("a",{parentName:"p",href:"https://www.flaticon.com/free-icon/home_1946488"},"Home")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.flaticon.com/free-icon/list_151917"},"List")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.flaticon.com/free-icon/analytics_633606"},"Analytics")," icons from FlatIcon."),(0,r.kt)("h2",{id:"install-react-native-svg"},"Install react-native-svg"),(0,r.kt)("p",null,"For rendering ",(0,r.kt)("inlineCode",{parentName:"p"},".svg"),"s, we will use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/react-native-svg/react-native-svg"},"react-native-svg"),"."),(0,r.kt)("p",null,"First, install the library:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-svg\n# or\nnpm install react-native-svg\n")),(0,r.kt)("p",null,"Then, install the iOS native dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ios && pod install && cd ..\n")),(0,r.kt)("p",null,"And finally, rebuild your app from XCode / Android Studio / terminal."),(0,r.kt)("h2",{id:"adding-an-svg-icon"},"Adding an .svg icon"),(0,r.kt)("p",null,"Let's, create a ",(0,r.kt)("inlineCode",{parentName:"p"},"Icons.tsx")," component in your ",(0,r.kt)("inlineCode",{parentName:"p"},"/components")," directory."),(0,r.kt)("p",null,"Take this ",(0,r.kt)("inlineCode",{parentName:"p"},"svg")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-svg"},'<svg width="511pt" height="511pt" viewBox="0 1 511 511.999">\n  <path d="M498.7 222.695c-.016-.011-.028-.027-.04-.039L289.805 13.81C280.902 4.902 269.066 0 256.477 0c-12.59 0-24.426 4.902-33.332 13.809L14.398 222.55c-.07.07-.144.144-.21.215-18.282 18.386-18.25 48.218.09 66.558 8.378 8.383 19.44 13.235 31.273 13.746.484.047.969.07 1.457.07h8.32v153.696c0 30.418 24.75 55.164 55.168 55.164h81.711c8.285 0 15-6.719 15-15V376.5c0-13.879 11.293-25.168 25.172-25.168h48.195c13.88 0 25.168 11.29 25.168 25.168V497c0 8.281 6.715 15 15 15h81.711c30.422 0 55.168-24.746 55.168-55.164V303.14h7.719c12.586 0 24.422-4.903 33.332-13.813 18.36-18.367 18.367-48.254.027-66.633zm-21.243 45.422a17.03 17.03 0 01-12.117 5.024H442.62c-8.285 0-15 6.714-15 15v168.695c0 13.875-11.289 25.164-25.168 25.164h-66.71V376.5c0-30.418-24.747-55.168-55.169-55.168H232.38c-30.422 0-55.172 24.75-55.172 55.168V482h-66.71c-13.876 0-25.169-11.29-25.169-25.164V288.14c0-8.286-6.715-15-15-15H48a13.9 13.9 0 00-.703-.032c-4.469-.078-8.66-1.851-11.8-4.996-6.68-6.68-6.68-17.55 0-24.234.003 0 .003-.004.007-.008l.012-.012L244.363 35.02A17.003 17.003 0 01256.477 30c4.574 0 8.875 1.781 12.113 5.02l208.8 208.796.098.094c6.645 6.692 6.633 17.54-.031 24.207zm0 0" />\n</svg>\n')),(0,r.kt)("p",null,"and convert it into a React component. To do this:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"import { Svg, Path } from 'react-native-svg'")),(0,r.kt)("li",{parentName:"ol"},"replace ",(0,r.kt)("inlineCode",{parentName:"li"},"svg")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"path")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"Svg")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Path")),(0,r.kt)("li",{parentName:"ol"},"add a default ",(0,r.kt)("inlineCode",{parentName:"li"},"fill")," color to the ",(0,r.kt)("inlineCode",{parentName:"li"},"svg")),(0,r.kt)("li",{parentName:"ol"},"add a default ",(0,r.kt)("inlineCode",{parentName:"li"},"width")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"height")," to the ",(0,r.kt)("inlineCode",{parentName:"li"},"svg"))),(0,r.kt)("p",null,"It should end up looking something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/Icons.tsx"',title:'"src/components/Icons.tsx"'},'import React from \'react\';\nimport { Svg, Path } from \'react-native-svg\';\n\nexport const HomeIcon: React.FC = () => {\n  return (\n    <Svg width={40} height={40} viewBox="0 1 511 511.999" fill="teal">\n      <Path d="M498.7 222.695c-.016-.011-.028-.027-.04-.039L289.805 13.81C280.902 4.902 269.066 0 256.477 0c-12.59 0-24.426 4.902-33.332 13.809L14.398 222.55c-.07.07-.144.144-.21.215-18.282 18.386-18.25 48.218.09 66.558 8.378 8.383 19.44 13.235 31.273 13.746.484.047.969.07 1.457.07h8.32v153.696c0 30.418 24.75 55.164 55.168 55.164h81.711c8.285 0 15-6.719 15-15V376.5c0-13.879 11.293-25.168 25.172-25.168h48.195c13.88 0 25.168 11.29 25.168 25.168V497c0 8.281 6.715 15 15 15h81.711c30.422 0 55.168-24.746 55.168-55.164V303.14h7.719c12.586 0 24.422-4.903 33.332-13.813 18.36-18.367 18.367-48.254.027-66.633zm-21.243 45.422a17.03 17.03 0 01-12.117 5.024H442.62c-8.285 0-15 6.714-15 15v168.695c0 13.875-11.289 25.164-25.168 25.164h-66.71V376.5c0-30.418-24.747-55.168-55.169-55.168H232.38c-30.422 0-55.172 24.75-55.172 55.168V482h-66.71c-13.876 0-25.169-11.29-25.169-25.164V288.14c0-8.286-6.715-15-15-15H48a13.9 13.9 0 00-.703-.032c-4.469-.078-8.66-1.851-11.8-4.996-6.68-6.68-6.68-17.55 0-24.234.003 0 .003-.004.007-.008l.012-.012L244.363 35.02A17.003 17.003 0 01256.477 30c4.574 0 8.875 1.781 12.113 5.02l208.8 208.796.098.094c6.645 6.692 6.633 17.54-.031 24.207zm0 0" />\n    </Svg>\n  );\n};\n')),(0,r.kt)("p",null,"Finally, in order so support arbitrary colors of the icon, pass the color in as a prop:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/Icons.tsx"',title:'"src/components/Icons.tsx"'},"type IconProps = {\n  color?: string;\n  size?: number;\n};\n\nexport const HomeIcon: React.FC<IconProps> = ({\n  color = 'teal',\n  size = 40,\n}) => {\n  return (\n    <Svg width={size} height={size} viewBox=\"0 1 511 511.999\" fill={color}>\n---\n")),(0,r.kt)("h2",{id:"use-the-icon-in-the-bottom-tab"},"Use the icon in the bottom tab"),(0,r.kt)("p",null,"We can customize the style of the bottom tab - including the name and icons - using the ",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/tab-based-navigation#customizing-the-appearance"},(0,r.kt)("inlineCode",{parentName:"a"},"screenOptions"))," prop on the Tab Navigator."),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"BottomTabs.navigator.tsx")," and use the ",(0,r.kt)("inlineCode",{parentName:"p"},"screenOptions")," prop to return the HomeIcon on the first tab, and the ListIcon on the second tab."),(0,r.kt)("p",null,"Start by just rendering out the route name:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Text } from 'react-native';\n\n<BottomTabs.Navigator\n  screenOptions={({ route }) => ({\n    tabBarIcon: ({ color, size }) => {\n      return <Text>{route.name}</Text>;\n    },\n  })}>\n")),(0,r.kt)("p",null,"Next, render the correct icon based on the route selected:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/screens/BottomTabs.navigator.tsx"',title:'"src/screens/BottomTabs.navigator.tsx"'},"import { HomeIcon } from '../components/Icons';\n\n<BottomTabs.Navigator\n  screenOptions={({ route }) => ({\n    tabBarIcon: ({ color, size }) => {\n      if (route.name === 'Home') {\n        return <HomeIcon />;\n      }\n\n      if (route.name === 'History') {\n        return <Text>History</Text>;\n      }\n\n      if (route.name === 'Analytics') {\n        return <Text>Analytics</Text>;\n      }\n\n      return null;\n    },\n  })}>\n")),(0,r.kt)("p",null,"Finally, pass through the ",(0,r.kt)("inlineCode",{parentName:"p"},"color")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," args to the icon:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="src/screens/BottomTabs.navigator.tsx"',title:'"src/screens/BottomTabs.navigator.tsx"'},"<BottomTabs.Navigator\n  screenOptions={({ route }) => ({\n    tabBarIcon: ({ color, size }) => {\n      if (route.name === 'HomeTab') {\n-        return <HomeIcon />;\n+        return <HomeIcon color={color} size={size} />;\n      }\n\n      if (route.name === 'HistoryTab') {\n        return <ListIcon color={color} size={size} />;\n      }\n\n      if (route.name === 'AnalyticsTab') {\n        return <AnalyticsIcon color={color} size={size} />;\n      }\n\n      return null;\n    },\n  })}>\n")),(0,r.kt)("p",null,"To customise the color of the tab bar icon, use ",(0,r.kt)("inlineCode",{parentName:"p"},"tabBarActiveTintColor")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"tabBarInactiveTintColor"),"."),(0,r.kt)("p",null,"Let's add two new colours to our ",(0,r.kt)("inlineCode",{parentName:"p"},"theme.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/theme.ts"',title:'"src/theme.ts"'},"colorBlue: '#1D84B5',\ncolorGrey: '#8E9AAF',\n")),(0,r.kt)("p",null,"And let's use them for the tint colours in ",(0,r.kt)("inlineCode",{parentName:"p"},"BottomTabs.navigator.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/screens/BottomTabs.navigator.tsx"',title:'"src/screens/BottomTabs.navigator.tsx"'},"<BottomTabs.Navigator\n  screenOptions={({ route }) => ({\n    tabBarActiveTintColor: theme.colorBlue,\n    tabBarInactiveTintColor: theme.colorGrey,\n    tabBarIcon: ({ color, size }) => {\n")),(0,r.kt)("p",null,"Let's also hide the tab bar label with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"tabBarShowLabel: false,\n")),(0,r.kt)("h2",{id:"updating-tab-title"},"Updating tab title"),(0,r.kt)("p",null,"While we're here, let's also update the titles of the tabs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'<BottomTabs.Screen\n  name="Home"\n  component={Home}\n+  options={{ title: "Today\'s Mood" }}\n/>\n<BottomTabs.Screen\n  name="History"\n  component={History}\n+  options={{ title: \'Past Moods\' }}\n/>\n<BottomTabs.Screen\n  name="Analytics"\n  component={Analytics}\n+  options={{ title: \'Fancy Charts\' }}\n/>\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you have lots of icons to convert, instead of converting them manually you can use ",(0,r.kt)("a",{parentName:"p",href:"https://react-svgr.com/playground/"},"react svgr")," - an online tool that can not only convert your svg to a React component, but it also cleans the svg from unnecessary ",(0,r.kt)("inlineCode",{parentName:"p"},"<g>"),"s and translations."))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Checkpoint \ud83d\udd17")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/51529ed7153b3b4796229e8c2f6aa8db6a96911d"},(0,r.kt)("strong",{parentName:"a"},"Use a vector icon for the home tab")," 51529ed7153b3b4796229e8c2f6aa8db6a96911d")))),(0,r.kt)("img",{src:(0,i.Z)("/img/vector-icons/ios-one.png"),alt:"iOS bottom tabs",width:"50%"}),(0,r.kt)("img",{src:(0,i.Z)("/img/vector-icons/android-one.png"),alt:"Android bottom tabs",width:"50%"}))}d.isMDXComponent=!0}}]);