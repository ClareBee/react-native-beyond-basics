"use strict";(self.webpackChunkreact_native_beyond_basics=self.webpackChunkreact_native_beyond_basics||[]).push([[3707],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return u}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||r;return n?i.createElement(f,a(a({ref:t},l),{},{components:n})):i.createElement(f,a({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<r;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3919:function(e,t,n){function i(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!i(e)}n.d(t,{b:function(){return i},Z:function(){return o}})},4996:function(e,t,n){n.d(t,{C:function(){return r},Z:function(){return a}});var i=n(2263),o=n(3919);function r(){var e=(0,i.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,i){var r=void 0===i?{}:i,a=r.forcePrependBaseUrl,s=void 0!==a&&a,c=r.absolute,p=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,o.b)(n))return n;if(s)return t+n;var l=n.startsWith(t)?n:t+n.replace(/^\//,"");return p?e+l:l}(r,n,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},782:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var i=n(7462),o=n(3366),r=(n(7294),n(3905)),a=n(4996),s={sidebar_position:2},c="View and Text",p={unversionedId:"basic-components/view-and-text",id:"basic-components/view-and-text",isDocsHomePage:!1,title:"View and Text",description:"Hopefully, at this point you'll already be quite familiar with View and Text:",source:"@site/docs/basic-components/view-and-text.mdx",sourceDirName:"basic-components",slug:"/basic-components/view-and-text",permalink:"/react-native-beyond-basics/docs/basic-components/view-and-text",editUrl:"https://github.com/kadikraman/react-native-beyond-basics/edit/main/website/docs/basic-components/view-and-text.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Mood Picker",permalink:"/react-native-beyond-basics/docs/basic-components/mood-picker"},next:{title:"Pressable and useState",permalink:"/react-native-beyond-basics/docs/basic-components/pressable-and-use-state"}},l=[],d={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"view-and-text"},"View and Text"),(0,r.kt)("p",null,"Hopefully, at this point you'll already be quite familiar with ",(0,r.kt)("inlineCode",{parentName:"p"},"View")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Text"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"View")," is a container to use for styling and positioning the elements within. Similar to ",(0,r.kt)("inlineCode",{parentName:"li"},"div")," in web development."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Text")," is used to display text.")),(0,r.kt)("p",null,"Let's use these components to display a emoji in a horizontal list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const moodOptions = [\n  { emoji: '\ud83e\uddd1\u200d\ud83d\udcbb', description: 'studious' },\n  { emoji: '\ud83e\udd14', description: 'pensive' },\n  { emoji: '\ud83d\ude0a', description: 'happy' },\n  { emoji: '\ud83e\udd73', description: 'celebratory' },\n  { emoji: '\ud83d\ude24', description: 'frustrated' },\n];\n")),(0,r.kt)("p",null,"To do this, let's create a ",(0,r.kt)("inlineCode",{parentName:"p"},"components")," directory in ",(0,r.kt)("inlineCode",{parentName:"p"},"src"),", next to ",(0,r.kt)("inlineCode",{parentName:"p"},"screens"),". This will be the place for all our components."),(0,r.kt)("p",null,"Let's create a new file called ",(0,r.kt)("inlineCode",{parentName:"p"},"MoodPicker.tsx"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/MoodPicker.tsx"',title:'"src/components/MoodPicker.tsx"'},"import React from 'react';\nimport { View, Text } from 'react-native';\n\nexport const MoodPicker: React.FC = () => {\n  return (\n    <View>\n      <Text>MoodPicker</Text>\n    </View>\n  );\n};\n")),(0,r.kt)("p",null,"And let's update ",(0,r.kt)("inlineCode",{parentName:"p"},"Home.screen.tsx")," to display it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="src/screens/Home.screen.tsx"',title:'"src/screens/Home.screen.tsx"'},"import * as React from 'react';\n-import { StyleSheet, View, Text } from 'react-native';\n+import { StyleSheet, View } from 'react-native';\n+import { MoodPicker } from '../components/MoodPicker';\n\n\nexport const Home: React.FC = () => {\n  return (\n    <View style={styles.container}>\n-      <Text>Home</Text>\n+      <MoodPicker />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n+   justifyContent: 'center',\n\n  },\n});\n\n")),(0,r.kt)("p",null,"Now let's update the ",(0,r.kt)("inlineCode",{parentName:"p"},"MoodPicker")," to display our list of emoji:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/MoodPicker.tsx"',title:'"src/components/MoodPicker.tsx"'},"import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst moodOptions = [\n  { emoji: '\ud83e\uddd1\u200d\ud83d\udcbb', description: 'studious' },\n  { emoji: '\ud83e\udd14', description: 'pensive' },\n  { emoji: '\ud83d\ude0a', description: 'happy' },\n  { emoji: '\ud83e\udd73', description: 'celebratory' },\n  { emoji: '\ud83d\ude24', description: 'frustrated' },\n];\n\nexport const MoodPicker: React.FC = () => {\n  return (\n    <View style={styles.moodList}>\n      {moodOptions.map((option) => (\n        <Text key={option.emoji} style={styles.moodText}>\n          {option.emoji}\n        </Text>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  moodText: {\n    fontSize: 24,\n  },\n  moodList: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20,\n  },\n});\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Checkpoint \ud83d\udd17")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/10eaf11bcd7e9173b91be028b818e7a044fa592c"},(0,r.kt)("strong",{parentName:"a"},"Show a list of emoji")," 10eaf11bcd7e9173b91be028b818e7a044fa592c")))),(0,r.kt)("img",{src:(0,a.Z)("/img/mood-picker/ios-exercise-1.png"),alt:"iOS emoji list",width:"50%"}),(0,r.kt)("img",{src:(0,a.Z)("/img/mood-picker/android-exercise-1.png"),alt:"Android emoji list",width:"50%"}))}m.isMDXComponent=!0}}]);