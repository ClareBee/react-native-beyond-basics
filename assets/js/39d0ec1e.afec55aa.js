"use strict";(self.webpackChunkreact_native_beyond_basics=self.webpackChunkreact_native_beyond_basics||[]).push([[6881],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return y}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),y=i,m=u["".concat(s,".").concat(y)]||u[y]||d[y]||a;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3921:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o={sidebar_position:1,title:"Intro to TypeScript",description:"Why we use TypeScript for this project"},p="Into to TypeScript",s={unversionedId:"typescript/typescript",id:"typescript/typescript",isDocsHomePage:!1,title:"Intro to TypeScript",description:"Why we use TypeScript for this project",source:"@site/docs/typescript/typescript.mdx",sourceDirName:"typescript",slug:"/typescript/typescript",permalink:"/react-native-beyond-basics/docs/typescript/typescript",editUrl:"https://github.com/kadikraman/react-native-beyond-basics/edit/main/website/docs/typescript/typescript.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Intro to TypeScript",description:"Why we use TypeScript for this project"},sidebar:"tutorialSidebar",previous:{title:"Build the Android app",permalink:"/react-native-beyond-basics/docs/new-project/run-android"},next:{title:"TypeScript for React Native",permalink:"/react-native-beyond-basics/docs/typescript/typescript-for-react-native"}},c=[{value:"What is TypeScript",id:"what-is-typescript",children:[{value:"1. Static Code Analysis",id:"1-static-code-analysis",children:[]},{value:"2. Expand JavaScript with Custom Types",id:"2-expand-javascript-with-custom-types",children:[]}]},{value:"Checking for type errors",id:"checking-for-type-errors",children:[]}],l={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"into-to-typescript"},"Into to TypeScript"),(0,a.kt)("p",null,"For this course, we will be using TypeScript instead of plain JavaScript."),(0,a.kt)("p",null,"TypeScript is becoming the tool of choice for JavaScript developers using modern tooling, and you are more than likely going to encounter it on your developer journey. So if you've never used TypeScript before, there's no time like the present to get stuck in!"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Because of the way the React Native project is set up, if you are not interested in learning TypeScript, you can simply choose not to use it. Your React Native project will still run and build if you use plain JavaScript or if your types aren't correct."))),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/play"},"TypeScript Playground")," to explore and try out TypeScript and the examples below."),(0,a.kt)("h2",{id:"what-is-typescript"},"What is TypeScript"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript"),' is essentially "typed JavaScript". It is a superset of JavaScript, which means that all valid JavaScript code is also valid TypeScript code. TypeScript files in React Native have ',(0,a.kt)("inlineCode",{parentName:"p"},".ts")," and ",(0,a.kt)("inlineCode",{parentName:"p"},".tsx")," file extensions (instead of ",(0,a.kt)("inlineCode",{parentName:"p"},".js")," and ",(0,a.kt)("inlineCode",{parentName:"p"},".jsx"),")."),(0,a.kt)("p",null,"TypeScript has two main usages:"),(0,a.kt)("h3",{id:"1-static-code-analysis"},"1. Static Code Analysis"),(0,a.kt)("p",null,"It analyses your existing code and points out any incorrect usages when possible."),(0,a.kt)("p",null,"For example, consider the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const myNum = 5;\nmyNum.split('');\n")),(0,a.kt)("p",null,"If you try this in a TypeScript file in your code editor, you should get a red underline under ",(0,a.kt)("inlineCode",{parentName:"p"},"split")," with the following message:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Property 'split' does not exist on type '5'.ts(2339)")),(0,a.kt)("p",null,"TypeScript has noticed that ",(0,a.kt)("inlineCode",{parentName:"p"},"myNum")," is a ",(0,a.kt)("inlineCode",{parentName:"p"},"number"),", but the ",(0,a.kt)("inlineCode",{parentName:"p"},"split")," method can only be called on ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," types which will most certainly cause an error if we try to run this code."),(0,a.kt)("h3",{id:"2-expand-javascript-with-custom-types"},"2. Expand JavaScript with Custom Types"),(0,a.kt)("p",null,"You can also declare types for your code to communicate intent and stay type safe. For example, consider this functions that is designed for adding two numbers together:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="add.js"',title:'"add.js"'},"const add = (a, b) => a + b;\n")),(0,a.kt)("p",null,"Since JavaScript is not type safe, there is really nothing preventing (or even warning you) from passing in strings, objects or even functions, which could cause unintended side-effects."),(0,a.kt)("p",null,"With TypeScript, we can communicate the intent of these functions by declaring types for the arguments and the return type:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="add.ts"',title:'"add.ts"'},"const add = (a: number, b: number): number => a + b;\n")),(0,a.kt)("p",null,"Now if you tried to call the ",(0,a.kt)("inlineCode",{parentName:"p"},"add")," function with ",(0,a.kt)("inlineCode",{parentName:"p"},'add("hello", "world")'),", you would get a warning in your code editor."),(0,a.kt)("h2",{id:"checking-for-type-errors"},"Checking for type errors"),(0,a.kt)("p",null,"TypeScript is the most useful during development if you use an IDE that supports just-in-time type-checking."),(0,a.kt)("p",null,"I would recommend use ",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"Visual Studio Code")," which comes with TypeScript support out of the box. VSCode and TypeScript are both built by Microsoft so they generally work very well together."),(0,a.kt)("p",null,"If you don't want to use VSCode, I'd recommend installing a TypeScript plugin to your favourite code editor."),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"To check for TypeScript errors on the terminal, you can run, add"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "ts:check": "tsc"\n},\n')),(0,a.kt)("p",{parentName:"div"},"to your ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," and run"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn ts:check\n# or\nnpm run ts:check\n")),(0,a.kt)("p",{parentName:"div"},"This is handy for checking for TypeScript errors on CI!"))))}d.isMDXComponent=!0}}]);