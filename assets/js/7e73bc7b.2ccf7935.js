"use strict";(self.webpackChunkreact_native_beyond_basics=self.webpackChunkreact_native_beyond_basics||[]).push([[5961],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return r}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return o}});var a=n(2263),r=n(3919);function i(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,o=i.forcePrependBaseUrl,s=void 0!==o&&o,c=i.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(s)return t+n;var p=n.startsWith(t)?n:t+n.replace(/^\//,"");return l?e+p:p}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},6688:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=(n(4996),{sidebar_position:2}),s="Pie Chart Solution",c={unversionedId:"data-visualisation/pie-chart-solution",id:"data-visualisation/pie-chart-solution",isDocsHomePage:!1,title:"Pie Chart Solution",description:"First, let's install Victory Native:",source:"@site/docs/data-visualisation/pie-chart-solution.mdx",sourceDirName:"data-visualisation",slug:"/data-visualisation/pie-chart-solution",permalink:"/react-native-beyond-basics/docs/data-visualisation/pie-chart-solution",editUrl:"https://github.com/kadikraman/react-native-beyond-basics/edit/main/website/docs/data-visualisation/pie-chart-solution.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Pie Chart",permalink:"/react-native-beyond-basics/docs/data-visualisation/pie-chart"},next:{title:"Wrapping Up",permalink:"/react-native-beyond-basics/docs/wrapping-up"}},l=[],p={toc:l};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pie-chart-solution"},"Pie Chart Solution"),(0,i.kt)("p",null,"First, let's install Victory Native:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add victory-native\n# or\nnpm install victory-native\n")),(0,i.kt)("p",null,"Victory Native has a dependency on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/react-native-svg/react-native-svg"},"React Native SVG"),", but we already have that installed from the icons section."),(0,i.kt)("p",null,"Victory itself doesn't have any additional native dependencies, so we don't need to rebuild the app this time."),(0,i.kt)("p",null,"Looking at the documentation for ",(0,i.kt)("a",{parentName:"p",href:"https://formidable.com/open-source/victory/docs/victory-pie/"},"Victory Pie"),", we need to pass it an array objects that have two keys: ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," for the label and ",(0,i.kt)("inlineCode",{parentName:"p"},"y")," for the count."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{ x: "Cats", y: 35 },\n{ x: "Dogs", y: 40 },\n{ x: "Birds", y: 55 }\n')),(0,i.kt)("p",null,"Our data doesn't look like this, so we'll need to do convert it. If you want to use lodash for the data manipulation, install it now with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add lodash\n# or\nnpm install lodash\n")),(0,i.kt)("p",null,"You'll notice that lodash doesn't come with TypeScript types by default, but there are ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/lodash"},"community-maintained types")," for it which we can install with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @types/lodash --dev\n# or\nnpm i --save-dev @types/lodash\n")),(0,i.kt)("p",null,"Open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Analytics.screen")," and get the ",(0,i.kt)("inlineCode",{parentName:"p"},"moodList")," from our app context:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/screens/Analytics.screen.tsx"',title:'"src/screens/Analytics.screen.tsx"'},"import { useAppContext } from '../App.provider';\n\n---\n\nconst appContext = useAppContext();\n")),(0,i.kt)("p",null,"Now, lodash has a handy function called ",(0,i.kt)("inlineCode",{parentName:"p"},"groupBy")," which takes in two arguments: an array and a math to the value you want to group by, and it returns an object where the keys are the value that you used for grouping, and the value is the array of the items in that group."),(0,i.kt)("p",null,"Then we can call ",(0,i.kt)("inlineCode",{parentName:"p"},"Object.entries")," on this object and map to the data format we're looking for."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/screens/Analytics.screen.tsx"',title:'"src/screens/Analytics.screen.tsx"'},"const data = Object.entries(groupBy(appContext.moodList, 'mood.emoji')).map(\n  ([key, value]) => ({\n    x: key,\n    y: value.length,\n  })\n);\n")),(0,i.kt)("p",null,"Now we can pass that data into our Victory Pie:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { VictoryPie } from 'victory-native';\n\n---\n\n<VictoryPie\n  data={data}\n/>\n")),(0,i.kt)("p",null,"You can then use the properties available in the documentation to tweak the pie chart to your liking, or to match the suggested solution!"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Checkpoint \ud83d\udd17")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/75ba6b1dff009ec0ebc6f653f6085fe5eb03c7b6"},(0,i.kt)("strong",{parentName:"a"},"Add a pie chart")," 75ba6b1dff009ec0ebc6f653f6085fe5eb03c7b6")))))}u.isMDXComponent=!0}}]);