"use strict";(self.webpackChunkreact_native_beyond_basics=self.webpackChunkreact_native_beyond_basics||[]).push([[7326],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),p=r,h=u["".concat(l,".").concat(p)]||u[p]||m[p]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return r}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return o}});var a=n(2263),r=n(3919);function i(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,o=i.forcePrependBaseUrl,s=void 0!==o&&o,l=i.absolute,d=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(s)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return d?e+c:c}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},9564:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(4996),s={sidebar_position:4},l="Gestures",d={unversionedId:"animation/gestures",id:"animation/gestures",isDocsHomePage:!1,title:"Gestures",description:"Animation is often combined with gesture events to give allow the user to interact with your app. One example of this is swipe-to-delete.",source:"@site/docs/animation/gestures.mdx",sourceDirName:"animation",slug:"/animation/gestures",permalink:"/react-native-beyond-basics/docs/animation/gestures",editUrl:"https://github.com/kadikraman/react-native-beyond-basics/edit/main/website/docs/animation/gestures.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Reanimated 2",permalink:"/react-native-beyond-basics/docs/animation/reanimated-2"},next:{title:"iOS",permalink:"/react-native-beyond-basics/docs/app-icons/ios"}},c=[{value:"Install <code>react-native-gesture-handler</code>",id:"install-react-native-gesture-handler",children:[]},{value:"iOS only",id:"ios-only",children:[]},{value:"Android only",id:"android-only",children:[]},{value:"Add swipe to delete",id:"add-swipe-to-delete",children:[{value:"Wrap MoodItemRow in a PanGestureHandler",id:"wrap-mooditemrow-in-a-pangesturehandler",children:[]}]},{value:"Delete item after swiping over a certain threshold",id:"delete-item-after-swiping-over-a-certain-threshold",children:[]}],m={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gestures"},"Gestures"),(0,i.kt)("p",null,"Animation is often combined with gesture events to give allow the user to interact with your app. One example of this is swipe-to-delete."),(0,i.kt)("p",null,"Lets use Reanimated 2 together with ",(0,i.kt)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-gesture-handler/docs/"},"react-native-gesture-handler")," to implement swipe-to-delete UI for the mood history."),(0,i.kt)("h2",{id:"install-react-native-gesture-handler"},"Install ",(0,i.kt)("inlineCode",{parentName:"h2"},"react-native-gesture-handler")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yarn add react-native-gesture-handler\n# or\nnpm install --save react-native-gesture-handler\n")),(0,i.kt)("p",null,"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"index.js")," and add the following import as the ",(0,i.kt)("strong",{parentName:"p"},"very first")," line in the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import 'react-native-gesture-handler';\n")),(0,i.kt)("h2",{id:"ios-only"},"iOS only"),(0,i.kt)("p",null,"Install native dependencies"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ios && pod install\n")),(0,i.kt)("h2",{id:"android-only"},"Android only"),(0,i.kt)("p",null,"Update your ",(0,i.kt)("inlineCode",{parentName:"p"},"MainActivity.java")," file, so that it overrides the method responsible for creating ReactRootView instance and then use the root view wrapper provided by this library. Do not forget to import ReactActivityDelegate, ReactRootView, and RNGestureHandlerEnabledRootView:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="src/main/java/com/moodtracker/MainActivity.java"',title:'"src/main/java/com/moodtracker/MainActivity.java"'},'package com.swmansion.gesturehandler.react.example;\n\nimport com.facebook.react.ReactActivity;\n+ import com.facebook.react.ReactActivityDelegate;\n+ import com.facebook.react.ReactRootView;\n+ import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;\npublic class MainActivity extends ReactActivity {\n\n  @Override\n  protected String getMainComponentName() {\n    return "MoodTracker";\n  }\n+  @Override\n+  protected ReactActivityDelegate createReactActivityDelegate() {\n+    return new ReactActivityDelegate(this, getMainComponentName()) {\n+      @Override\n+      protected ReactRootView createRootView() {\n+       return new RNGestureHandlerEnabledRootView(MainActivity.this);\n+      }\n+    };\n+  }\n}\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Checkpoint \ud83d\udd17")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/e53e5d1a3a0806be23c2ae8bd238e211a9d0f47e"},(0,i.kt)("strong",{parentName:"a"},"Install react-native-gesture-handler")," e53e5d1a3a0806be23c2ae8bd238e211a9d0f47e")))),(0,i.kt)("h2",{id:"add-swipe-to-delete"},"Add swipe to delete"),(0,i.kt)("p",null,'The idea behind swipe to delete is this: we wrap the whole row in a GestureHandler, animate the row horizontally when the user "swipes", and trigger the "delete" animation if the user swipes across a certain threshold.'),(0,i.kt)("h3",{id:"wrap-mooditemrow-in-a-pangesturehandler"},"Wrap MoodItemRow in a PanGestureHandler"),(0,i.kt)("p",null,"First, let's wrap the whole ",(0,i.kt)("inlineCode",{parentName:"p"},"MoodItemRow")," component in a PanGestureHandler. This allows us to track gesture events within the designated area:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { PanGestureHandler } from "react-native-gesture-handler";\n\n...\n\n<PanGestureHandler\n  minDeltaX={1}\n  minDeltaY={100}>\n\n...\n\n</PanGestureHandler>\n')),(0,i.kt)("p",null,"Next, let's add a callback for ",(0,i.kt)("inlineCode",{parentName:"p"},"onGestureEvent")," - this gets called whenever the user interacts with the area within the gesture handler:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { useAnimatedGestureHandler } from 'react-native-reanimated';\n\nconst onGestureEvent = useAnimatedGestureHandler(\n  {\n    onActive: event => {\n      console.warn(event.translationX);\n    },\n  },\n  [],\n);\n\n<PanGestureHandler\n  minDeltaX={1}\n  minDeltaY={100}\n  onGestureEvent={onGestureEvent}>\n...\n")),(0,i.kt)("p",null,"Now we want to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"event.translationX")," value and animate the row right or left based on how much the user has moved."),(0,i.kt)("p",null,"To store an animated value, we can use ",(0,i.kt)("inlineCode",{parentName:"p"},"useSharedValue"),", and to use it in an inline style we can use ",(0,i.kt)("inlineCode",{parentName:"p"},"useAnimatedStyle"),"."),(0,i.kt)("p",null,"Finally, in order to animate a view using an animated style, replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"View")," in question with ",(0,i.kt)("inlineCode",{parentName:"p"},"Animated.View"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import Reanimated, {\n  useAnimatedStyle,\n  useSharedValue,\n} from 'react-native-reanimated';\n...\n\nconst offset = useSharedValue(0);\n\n...\n\nconst animatedStyle = useAnimatedStyle(() => ({\n  transform: [{ translateX: offset.value }],\n}));\n\nconst onGestureEvent = useAnimatedGestureHandler(\n  {\n    onActive: event => {\n      const xVal = Math.floor(event.translationX);\n      offset.value = xVal;\n    },\n  },\n  [],\n);\n...\n\n<Reanimated.View style={[styles.moodItem, animatedStyle]}>\n...\n")),(0,i.kt)("p",null,"Lastly, we want to snap the row back to its original position if the user finishes dragging. Conveniently enough the animated gesture handler has an ",(0,i.kt)("inlineCode",{parentName:"p"},"onEnd")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"const onGestureEvent = useAnimatedGestureHandler(\n  {\n    onActive: event => {\n      const xVal = Math.floor(event.translationX);\n      offset.value = xVal;\n    },\n+    onEnd: () => {\n+      offset.value = withTiming(0);\n+    },\n  },\n  [],\n);\n")),(0,i.kt)("p",null,"Notice that we set the value back ",(0,i.kt)("inlineCode",{parentName:"p"},"withTiming(0)")," - this ensures that the card will animate back instead of snapping."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Checkpoint \ud83d\udd17")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/061fc13093ccbe857b7d63ebf88d19538ac4c2cf"},(0,i.kt)("strong",{parentName:"a"},"Use react-native-gesture-handler to swipe row")," 061fc13093ccbe857b7d63ebf88d19538ac4c2cf")))),(0,i.kt)("h2",{id:"delete-item-after-swiping-over-a-certain-threshold"},"Delete item after swiping over a certain threshold"),(0,i.kt)("p",null,"Let's do it so that if the user swipes 80pt or more in either direction, the item gets deleted:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\nimport { runOnJS } from 'react-native-reanimated';\n\nconst removeWithDelay = React.useCallback(() => {\n  setTimeout(() => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    appContext.handleDeleteMood(item);\n  }, 250);\n}, [appContext, item]);\n\nconst onGestureEvent = useAnimatedGestureHandler<\n  PanGestureHandlerGestureEvent,\n  { shouldRemove: boolean }\n>(\n  {\n    onActive: (event, ctx) => {\n      const xVal = Math.floor(event.translationX);\n      offset.value = xVal;\n\n      // use Absolute value so the user could swipe either left or right\n      if (Math.abs(xVal) <= maxPan) {\n        ctx.shouldRemove = false;\n      } else {\n        ctx.shouldRemove = true;\n      }\n    },\n    onEnd: (_, ctx) => {\n      if (ctx.shouldRemove) {\n        // if the item should be removed, animate it off the screen first\n        offset.value = withTiming(Math.sign(offset.value) * 2000);\n\n        // then trigger the remove mood item with a small delay\n        runOnJS(removeWithDelay)();\n      } else {\n        // otherwise, animate the item back to the start\n        offset.value = withTiming(0);\n      }\n    },\n  },\n  []\n);\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Checkpoint \ud83d\udd17")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kadikraman/MoodTracker/commit/a5116595a94fdf1730a06cfdcf97287332d13deb"},"*",(0,i.kt)("em",{parentName:"a"},"Use delete item on swipe")," a5116595a94fdf1730a06cfdcf97287332d13deb")))),(0,i.kt)("div",null,(0,i.kt)("video",{width:"100%",controls:!0},(0,i.kt)("source",{src:(0,o.Z)("/img/animation/swipe-to-delete.mp4"),type:"video/mp4"}))))}u.isMDXComponent=!0}}]);